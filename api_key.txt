import requests
import datetime
import numpy as np
import pandas as pd
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt


API_KEY = ''
lat = 13.0827
lon = 80.2707
url = 'https://api.windy.com/api/point-forecast/v2'

headers = {
    'Content-Type': 'application/json',
    'x-windy-key': API_KEY,
}

payload = {
    "lat": lat,
    "lon": lon,
    "model": "gfs",
    "parameters": ["temp", "wind", "precip"],
    "levels": ["surface"],
}
payload["key"] = API_KEY
response = requests.post(url, json=payload, headers=headers)

if response.status_code == 200:
    data = response.json()
    timestamps = data['ts']
    temp_values = data['temp-surface']
    wind_u_values = data['wind_u-surface']
    wind_v_values = data['wind_v-surface']
    rain_values = data['past3hprecip-surface']

    print("Weather Forecast:")

    for i in range(len(timestamps)):
        time = datetime.datetime.fromtimestamp(timestamps[i] / 1000, datetime.UTC)
        temp_celsius = temp_values[i] - 273.15

    df = pd.DataFrame({
        "time" : [datetime.datetime.fromtimestamp(ts/1000, datetime.UTC) for ts in timestamps],
        "temp_celsius" : [t -273.15 for t in temp_values],
        "wind_u" : wind_u_values,
        "wind_v" : wind_v_values,
        "rain" : rain_values
        })
    df["wind_speed"]=np.sqrt(df["wind_u"]**2 + df["wind_v"]**2)
    x = df[["temp_celsius","wind_speed","rain"]]
    kmeans = KMeans(n_clusters=3,random_state=42, n_init='auto')
    df['cluster']=kmeans.fit_predict(x)
    print(df.head())
    plt.scatter(df["temp_celsius"],df["wind_speed"],c=df["cluster"],cmap="viridis")
    plt.show()
else:
    print(f"Error: {response.status_code}")
    print(response.text)

#        print(f"{time} | Temp: {temp_celsius:.2f}Â°C | Wind u: {wind_u_values[i]:.2f} m/s |Wind v: {wind_v_values[i]:.2f} m/s | Rain: {rain_values[i]} mm")
#else:
#    print(f"Error: {response.status_code}")
#    print(response.text)